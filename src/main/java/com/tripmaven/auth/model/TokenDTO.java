package com.tripmaven.auth.model;

import java.time.LocalDateTime;

import com.tripmaven.members.model.MembersEntity;

import jakarta.persistence.PrePersist;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * 토큰 관리 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class TokenDTO {

    private long id;
    private MembersEntity members;
    private String tokenValue;
    private LocalDateTime issuedAt;
    private long expiresIn;
    private LocalDateTime expirationDate;
    private String userAgent;
    private String status;
    
    @PrePersist
    public void prePersist() {
        LocalDateTime now = LocalDateTime.now();
        if (issuedAt == null) issuedAt = now;
        if (expirationDate == null) expirationDate = now.plusSeconds(expiresIn / 1000); // 예를 들어 expiresIn이 밀리초 단위라면
    }
    
    //DTO를 ENTITY로 변환하는 메소드
    public TokenEntity toEntity() {
    	return TokenEntity.builder()
    			.id(id)
    			.member(members)
    			.tokenValue(tokenValue)
    			.issuedAt(issuedAt)
    			.expiresIn(expiresIn)
    			.expirationDate(expirationDate)
    			.userAgent(userAgent)
    			.status(status)
    			.build();
    }
    
    //Entity를 DTO로 변환하는 메소드
    public static TokenDTO toDto(TokenEntity entity) {
    	return TokenDTO.builder()
    			.id(entity.getId())
    			.members(entity.getMember())
    			.tokenValue(entity.getTokenValue())
    			.issuedAt(entity.getIssuedAt())
    			.expiresIn(entity.getExpiresIn())
    			.expirationDate(entity.getExpirationDate())
    			.userAgent(entity.getUserAgent())
    			.status(entity.getStatus())
    			.build();
    }
}
